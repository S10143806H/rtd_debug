# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Ameba IoT
# This file is distributed under the same license as the AmebaDocs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AmebaDocs EPUB3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-27 14:30+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:3
msgid "UART - Communicate with the computer via UART"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:8
msgid ":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **Introduction of UART** :raw-html:`</p>`"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:12
msgid "UART uses two wire, one for transmitting and the other one for receiving, so the data transmission is bidirectional. The communication uses a predefined frequency (baud rate) to transmit data. In Arduino, UART is called “Serial”. There is only one hardware UART on Arduino Uno and it is primarily used to read the log and messages printed by Arduino (so it is also called “Log UART”). If we use the hardware UART for other purposes, the Log UART does not have resources to function. To provide more UART connections, it is possible to use a GPIO pin to simulate the behavior of UART with a software approach, this is called Software Serial. Ameba is equipped with several hardware UART ports, but it is also compatible with the Software Serial library."
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:25
msgid ":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **Materials** :raw-html:`</p>`"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:29
msgid "AmebaD [RTL8722DM / RTL8722CSM / RTL8722DM MINI] x 1"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:30
msgid "USB to TTL Adapter x 1"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:32
msgid ":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **Example** :raw-html:`</p>`"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:36
msgid "In this example, we use UART to connect USB to TTL adapter to Ameba."
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:38
msgid "USB to TTL adapter sends data to Ameba, the data would be returned by Ameba, and showed on the screen."
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:40
msgid "**Install USB to TTL Adapter**"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:47
msgid "USB to TTL adapter converts USB to serial interface. Normally, there are at least 4 pins on the adapter, that is 3V3 (or 5V), GND, TX and RX. Generally, installing the driver for the USB to TTL adapter would be required before using it. If the adapter uses the chip of FTDI, Windows will search and install the driver automatically, otherwise, you may need to install corresponding driver yourself."
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:49
msgid "Afterwards, open device manager. You can find corresponding serial port number of the USB to TTL adapter:"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:51
msgid "|1|"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:111
#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:111
msgid "1"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:53
msgid "Executing the Example"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:56
msgid "Open the “SoftwareSerialExample” example in ``“File” -> “Examples” -> “AmebaSoftwareSerial” -> “SoftwareSerial_Basic”``:"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:58
msgid "|2|"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:115
#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:115
msgid "2"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:62
msgid "Connect the wire as the following diagrams show. The TX pin of USB to TTL adapter is connected to the RX of Ameba, and the RX pin of USB to TTL adapter is connected to the TX of Ameba."
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:64
msgid "**RTL8722DM / RTL8722CSM** Wiring Diagram:"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:66
msgid "|3|"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:119
#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:119
msgid "3"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:68
msgid "**RTL8722DM MINI** Wiring Diagram:"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:70
msgid "|3-1|"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:123
#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:123
msgid "3-1"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:72
msgid "Next, open a serial port terminal, such as Putty or Tera Term. (Putty is used in this example). Open the Putty window, choose “Serial” in connection type, and specify the port number of the USB to TTL adapter (e.g. COM8). In the speed field, fill in the baud rate of this connection. Note that both sides of the connection should use the same baud rate. In this example we set baud rate 4800."
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:79
msgid "|4|"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:127
#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:127
msgid "4"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:81
msgid "Next, select “Serial” on the left side. Set data bits to 8, stop bits to 1, parity to none, and flow control to none."
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:84
msgid "|5|"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:131
#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:131
msgid "5"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:86
msgid "Then click Open and press the reset button on Ameba. You can see the “Hello, world?” message appears in Putty. If characters are typed into Putty, the input characters would be sent to Serial RX of Ameba by TX of USB to TTL Adapter, and returned by Serial TX of Ameba. Finally, RX of USB to TTL Adapter receives the returned characters and prints them in Putty. Therefore, if you insert “I am fine”, you will get something like this:"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:94
msgid "|6|"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:135
#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:135
msgid "6"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:96
msgid ":raw-html:`<p style=\"color:#E67E22; font-size:24px\">` **Code Reference** :raw-html:`</p>`"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:101
msgid "First, use ``SoftwareSerial:begin(speed)`` to set the baud rate for the serial communication:"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:102
msgid "https://www.arduino.cc/en/Reference/SoftwareSerialBegin"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:105
msgid "Use ``write()`` to send data, and use ``SoftwareSerial:available()`` to get the number of bytes available for reading from a software serial port:"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:107
msgid "https://www.arduino.cc/en/Reference/SoftwareSerialAvailable"
msgstr ""

#: ../../source/ambd_arduino/examples/peripheral/UART - Communicate with the computer via UART.rst:109
msgid "If there are data available to read, use read() to read from serial port."
msgstr ""
